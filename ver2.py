# This code generated by Nail Tosun and under licenced by PATATES Licence
# %%
from builtins import int
import time
import xlrd
import xlwt
import format
import pandas as pd

open_workbook = xlwt.Workbook(encoding="utf-8")
worksheet = open_workbook.add_sheet("ORTAK_BILGI", cell_overwrite_ok=True)

KCETAS_DAIRE_NO = []
KCETAS_BINA_NO = []
KCETAS_SOKAK_Isim = []
KCETAS_MAHALLE_Isim = []
KCETAS_ADRES_List = []
KCETAS_ADRES = []
KCETAS_ABONE_TIPI = []
KCETAS_ABONE_NO_TIPI = []
KCETAS_ABONE_NO = []
KCETAS_AKTIFTUK = []
KCETAS_ORTALAMA = []
KCETAS_AY = []
KCETAS_ABONE_NO_TIPI_CON = []
KCETAS_ABONE_NO_TIPI_all = []
KCETAS_ABONE_NO_TIPI_List = []

class Kcedas(object):
    def __init__(self, adres, abone_no, abone_tip, aktiftuk, ortalama, kesim):
        self.adres = adres
        self.abone_no = abone_no
        self.abone_tip = abone_tip
        self.aktiftuk = aktiftuk
        self.ortalama = ortalama
        self.kesim = kesim

AY = ['OCAK', 'ŞUBAT', 'MART', 'NİSAN', 'MAYIS', 'HAZİRAN', 'TEMMUZ', 'AĞUSTOS', 'EYLÜL', 'EKİM', 'KASIM', 'ARALIK']

path = r'C:\Users\nailt\Desktop\KCEDAS-data-mining\tbtkdmkrs4.xlsx'
file_read = open (path, 'r')
excel_data = file_read.readlines
wb = xlrd.open_workbook(path)
sheet_names = wb.sheet_names()

# For multiple sheets this approach can be used but not most efficient.
# %%
for sheet in wb.sheets():
    nrows = sheet.nrows
    ncols = sheet.ncols
    dataframe = []
    for row in range (nrows):
        row_carrier = []
        for col in range (ncols):
            value_cell = sheet.cell(row, col).value
            try:
                value_cell = str(int(value_cell))
            except ValueError:
                pass
            finally:
                row_carrier.append(value_cell)
        df_row = Kcedas(*row_carrier)
        dataframe.append(df_row)
# %%
for df_row in dataframe:
    KCETAS_ADRES.append(df_row.adres)
    if df_row.aktiftuk != '':
        KCETAS_AKTIFTUK.append(df_row.aktiftuk)
    if df_row.ortalama !='':
        KCETAS_ORTALAMA.append(df_row.ortalama)
    if df_row.adres in AY:
        KCETAS_AY.append(df_row.adres)
        KCETAS_ADRES.remove(df_row.adres)
    if df_row.abone_no != '' and df_row.abone_tip != '':
        KCETAS_ABONE_NO_TIPI.append([df_row.abone_no, df_row.abone_tip])
        KCETAS_ABONE_NO.append(df_row.abone_no)
# %%
for abonenotip in KCETAS_ABONE_NO_TIPI:
    if abonenotip not in KCETAS_ABONE_NO_TIPI_all:
        KCETAS_ABONE_NO_TIPI_all.append(abonenotip)
i = 0
counter = 0
for item in KCETAS_ABONE_NO_TIPI_all:
    if item[i] == item[i+1]:
        counter = counter + 1
    if i == len(KCETAS_ABONE_NO_TIPI_all)-1:
        break
KCETAS_ABONE_NO_TIPI_all_plus1 = [x for x in KCETAS_ABONE_NO_TIPI_all]
KCETAS_ABONE_NO_TIPI_all_plus1.append(KCETAS_ABONE_NO_TIPI_all_plus1[0])
i = 1
for item in KCETAS_ABONE_NO_TIPI_all:
    if item[0] != KCETAS_ABONE_NO_TIPI_all_plus1[i][0]:
        KCETAS_ABONE_NO_TIPI_List.append(item)
    i = i + 1
'''
KCETAS_BILGI = []
cout = 0
for item in KCETAS_AY:
    A = [x for x in KCETAS_ABONE_NO]
    B = [y for y in KCETAS_AKTIFTUK]
    C = [z for z in KCETAS_ORTALAMA]
    KCETAS_BILGI.append([item, [A[cout]], B[cout], C[cout]])
    cout = cout + 1
#asd = pd.DataFrame({'AY':KCETAS_AY,'ABONE_NO':KCETAS_ABONE_NO,'AKTIF_TUK':KCETAS_AKTIFTUK, 'ORTALAMA':KCETAS_ORTALAMA})
'''
KCETAS_ADRES
# %%
for patates in KCETAS_ADRES:
    try:
        if 'SEMT: ' in patates:
            KCETAS_MAHALLE_Isim.append(patates)
        elif 'CADDESOKAK: ' in patates:
            KCETAS_SOKAK_Isim.append(patates)
        elif 'BINA: ' in patates:
            KCETAS_BINA_NO.append(patates)
        elif 'DAIRENO: ' in patates:
            KCETAS_DAIRE_NO.append(patates)
            if len(KCETAS_DAIRE_NO) > 0:
                KCETAS_ADRES_List.append([KCETAS_MAHALLE_Isim[-1], KCETAS_SOKAK_Isim[-1], KCETAS_BINA_NO[-1], KCETAS_DAIRE_NO[-1]])
            else:
                KCETAS_ADRES_List.append([KCETAS_MAHALLE_Isim[-1], KCETAS_SOKAK_Isim[-1], KCETAS_BINA_NO[-1], 'Daire no yok'])
    except:
        print('KCETAS adres bilgilerini kontrol et!')
len(KCETAS_ADRES_List)
len(KCETAS_ABONE_NO_TIPI_List)
KCETAS_ADRES_List
